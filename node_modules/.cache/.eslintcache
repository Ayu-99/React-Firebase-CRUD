[{"D:\\reacttut\\react-firebase-crud\\src\\index.js":"1","D:\\reacttut\\react-firebase-crud\\src\\App.jsx":"2","D:\\reacttut\\react-firebase-crud\\src\\components\\Contact.jsx":"3","D:\\reacttut\\react-firebase-crud\\src\\components\\ContactForm.jsx":"4","D:\\reacttut\\react-firebase-crud\\src\\firebase.js":"5"},{"size":150,"mtime":1612799756523,"results":"6","hashOfConfig":"7"},{"size":459,"mtime":1612801179348,"results":"8","hashOfConfig":"7"},{"size":3817,"mtime":1612812501943,"results":"9","hashOfConfig":"7"},{"size":3266,"mtime":1612811863013,"results":"10","hashOfConfig":"7"},{"size":550,"mtime":1612805981556,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"172z84b",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"D:\\reacttut\\react-firebase-crud\\src\\index.js",[],["24","25"],"D:\\reacttut\\react-firebase-crud\\src\\App.jsx",[],"D:\\reacttut\\react-firebase-crud\\src\\components\\Contact.jsx",["26","27","28"],"D:\\reacttut\\react-firebase-crud\\src\\components\\ContactForm.jsx",["29","30","31"],"import React, { useEffect, useState } from \"react\";\r\n\r\nconst ContactForm=(props)=>{\r\n    \r\n    const initialFieldValues={\r\n        fullName:\"\",\r\n        mobile:\"\",\r\n        email:\"\",\r\n        address:\"\"\r\n    };\r\n    const [values, setValues]=useState(initialFieldValues);\r\n    \r\n    useEffect(()=>{\r\n        if(props.currentId==\"\"){\r\n            setValues({\r\n                ...initialFieldValues\r\n            })\r\n        }else{\r\n            // console.log(props.contactObjects[props.currentId]);\r\n            setValues({\r\n                \r\n                 ...props.contactObjects[props.currentId]\r\n            })\r\n            // console.log(values);   \r\n        }\r\n    },[props.currentId, props.contactObjects])\r\n\r\n    const inputEvent=(e)=>{\r\n        const {name,value}=e.target;\r\n        setValues((prevValue)=>{\r\n            return{\r\n                ...prevValue,\r\n                [name]:value,\r\n            };\r\n\r\n        });\r\n\r\n    }\r\n\r\n    const formSubmit=(event)=>{\r\n        event.preventDefault(); \r\n        alert(values.fullName+ values.mobile);\r\n        props.addOrEdit(values);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form autoComplete=\"off\" onSubmit={formSubmit}>\r\n                <div className=\"form-group input-group col-md-6\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <div className=\"input-group-text\">\r\n                            üë®\r\n                        </div>\r\n                    </div>\r\n                    <input className=\"form-control\" placeholder=\"Full Name\" onChange={inputEvent} name=\"fullName\" values={values.fullName}>\r\n\r\n                    </input>\r\n                </div>\r\n                <div className=\"form-group input-group col-md-6\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <div className=\"input-group-text\">\r\n                            üì≤\r\n                        </div>\r\n                    </div>\r\n                    <input className=\"form-control\" placeholder=\"Mobile\" onChange={inputEvent} name=\"mobile\" values={values.mobile}>\r\n\r\n                    </input>\r\n                </div>\r\n                <div className=\"form-group input-group col-md-6\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <div className=\"input-group-text\">\r\n                            ‚úâÔ∏è\r\n                        </div>\r\n                    </div>\r\n                    <input className=\"form-control\" placeholder=\"Email\"  onChange={inputEvent} name=\"email\" values={values.email}>\r\n\r\n                    </input>\r\n                </div>\r\n                <div className=\"form-group input-group col-md-6\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <div className=\"input-group-text\">\r\n                            üè†\r\n                        </div>\r\n                    </div>\r\n                    <input className=\"form-control\" placeholder=\"Address\" onChange={inputEvent} name=\"address\" values={values.address}>\r\n\r\n                    </input>\r\n                </div>\r\n                <input type=\"submit\" value={props.currentId==\"\"?\"Save\":\"Update\"} className=\"btn btn-primary\"/>\r\n\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ContactForm;","D:\\reacttut\\react-firebase-crud\\src\\firebase.js",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":38,"column":21,"nodeType":"38","messageId":"39","endLine":38,"endColumn":23},{"ruleId":"40","severity":1,"message":"41","line":90,"column":49,"nodeType":"42","endLine":90,"endColumn":114},{"ruleId":"40","severity":1,"message":"41","line":93,"column":49,"nodeType":"42","endLine":93,"endColumn":110},{"ruleId":"36","severity":1,"message":"37","line":14,"column":27,"nodeType":"38","messageId":"39","endLine":14,"endColumn":29},{"ruleId":"43","severity":1,"message":"44","line":26,"column":7,"nodeType":"45","endLine":26,"endColumn":46,"suggestions":"46"},{"ruleId":"36","severity":1,"message":"37","line":89,"column":60,"nodeType":"38","messageId":"39","endLine":89,"endColumn":62},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initialFieldValues'. Either include it or remove the dependency array.","ArrayExpression",["49"],"no-global-assign","no-unsafe-negation",{"desc":"50","fix":"51"},"Update the dependencies array to be: [props.currentId, props.contactObjects, initialFieldValues]",{"range":"52","text":"53"},[673,712],"[props.currentId, props.contactObjects, initialFieldValues]"]